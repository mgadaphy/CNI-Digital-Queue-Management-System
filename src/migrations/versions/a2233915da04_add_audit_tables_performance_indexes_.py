"""Add audit tables, performance indexes, and enhanced model fields

Revision ID: a2233915da04
Revises: a924b75440d8
Create Date: 2025-08-30 13:26:34.788978

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a2233915da04'
down_revision = 'a924b75440d8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('system_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('metric_type', sa.String(length=50), nullable=False),
    sa.Column('metric_value', sa.Float(), nullable=False),
    sa.Column('station_id', sa.Integer(), nullable=True),
    sa.Column('service_type_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['service_type_id'], ['service_types.id'], ),
    sa.ForeignKeyConstraint(['station_id'], ['stations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('system_metrics', schema=None) as batch_op:
        batch_op.create_index('idx_system_metrics_station_timestamp', ['station_id', 'timestamp'], unique=False)
        batch_op.create_index('idx_system_metrics_type_timestamp', ['metric_type', 'timestamp'], unique=False)

    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=True),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('old_values', sa.JSON(), nullable=True),
    sa.Column('new_values', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['agents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.create_index('idx_audit_logs_action', ['action'], unique=False)
        batch_op.create_index('idx_audit_logs_resource', ['resource_type', 'resource_id'], unique=False)
        batch_op.create_index('idx_audit_logs_user_timestamp', ['user_id', 'timestamp'], unique=False)

    op.create_table('error_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('error_type', sa.String(length=50), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=False),
    sa.Column('stack_trace', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('endpoint', sa.String(length=200), nullable=True),
    sa.Column('request_data', sa.JSON(), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['agents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('error_logs', schema=None) as batch_op:
        batch_op.create_index('idx_error_logs_resolved', ['resolved'], unique=False)
        batch_op.create_index('idx_error_logs_severity', ['severity'], unique=False)
        batch_op.create_index('idx_error_logs_timestamp', ['timestamp'], unique=False)

    op.create_table('service_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('queue_entry_id', sa.Integer(), nullable=False),
    sa.Column('agent_id', sa.Integer(), nullable=False),
    sa.Column('service_type_id', sa.Integer(), nullable=False),
    sa.Column('station_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('service_duration', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('citizen_satisfaction', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['queue_entry_id'], ['queue.id'], ),
    sa.ForeignKeyConstraint(['service_type_id'], ['service_types.id'], ),
    sa.ForeignKeyConstraint(['station_id'], ['stations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('service_logs', schema=None) as batch_op:
        batch_op.create_index('idx_service_logs_agent', ['agent_id'], unique=False)
        batch_op.create_index('idx_service_logs_queue_entry', ['queue_entry_id'], unique=False)
        batch_op.create_index('idx_service_logs_service_type', ['service_type_id'], unique=False)
        batch_op.create_index('idx_service_logs_start_time', ['start_time'], unique=False)
        batch_op.create_index('idx_service_logs_station', ['station_id'], unique=False)
        batch_op.create_index('idx_service_logs_status', ['status'], unique=False)

    with op.batch_alter_table('agents', schema=None) as batch_op:
        batch_op.add_column(sa.Column('phone', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('specializations', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('login_time', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('logout_time', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.create_index('idx_agents_active_status', ['is_active', 'status'], unique=False)
        batch_op.create_index('idx_agents_email', ['email'], unique=False)
        batch_op.create_index('idx_agents_employee_id', ['employee_id'], unique=False)
        batch_op.create_index('idx_agents_station', ['current_station_id'], unique=False)
        batch_op.create_index('idx_agents_status', ['status'], unique=False)

    with op.batch_alter_table('citizens', schema=None) as batch_op:
        batch_op.create_index('idx_citizens_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_citizens_phone_number', ['phone_number'], unique=False)
        batch_op.create_index('idx_citizens_pre_enrollment_code', ['pre_enrollment_code'], unique=False)

    with op.batch_alter_table('queue', schema=None) as batch_op:
        batch_op.create_index('idx_queue_entries_called_at', ['called_at'], unique=False)
        batch_op.create_index('idx_queue_entries_citizen_service', ['citizen_id', 'service_type_id'], unique=False)
        batch_op.create_index('idx_queue_entries_completed_at', ['completed_at'], unique=False)
        batch_op.create_index('idx_queue_entries_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_queue_entries_service_type', ['service_type_id'], unique=False)
        batch_op.create_index('idx_queue_entries_status', ['status'], unique=False)

    with op.batch_alter_table('service_types', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description_fr', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('description_en', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('required_documents', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))

    with op.batch_alter_table('stations', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('supported_services', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('location', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('stations', schema=None) as batch_op:
        batch_op.drop_column('created_at')
        batch_op.drop_column('location')
        batch_op.drop_column('supported_services')
        batch_op.drop_column('description')

    with op.batch_alter_table('service_types', schema=None) as batch_op:
        batch_op.drop_column('created_at')
        batch_op.drop_column('required_documents')
        batch_op.drop_column('description_en')
        batch_op.drop_column('description_fr')

    with op.batch_alter_table('queue', schema=None) as batch_op:
        batch_op.drop_index('idx_queue_entries_status')
        batch_op.drop_index('idx_queue_entries_service_type')
        batch_op.drop_index('idx_queue_entries_created_at')
        batch_op.drop_index('idx_queue_entries_completed_at')
        batch_op.drop_index('idx_queue_entries_citizen_service')
        batch_op.drop_index('idx_queue_entries_called_at')

    with op.batch_alter_table('citizens', schema=None) as batch_op:
        batch_op.drop_index('idx_citizens_pre_enrollment_code')
        batch_op.drop_index('idx_citizens_phone_number')
        batch_op.drop_index('idx_citizens_created_at')

    with op.batch_alter_table('agents', schema=None) as batch_op:
        batch_op.drop_index('idx_agents_status')
        batch_op.drop_index('idx_agents_station')
        batch_op.drop_index('idx_agents_employee_id')
        batch_op.drop_index('idx_agents_email')
        batch_op.drop_index('idx_agents_active_status')
        batch_op.drop_column('created_at')
        batch_op.drop_column('logout_time')
        batch_op.drop_column('login_time')
        batch_op.drop_column('specializations')
        batch_op.drop_column('phone')

    with op.batch_alter_table('service_logs', schema=None) as batch_op:
        batch_op.drop_index('idx_service_logs_status')
        batch_op.drop_index('idx_service_logs_station')
        batch_op.drop_index('idx_service_logs_start_time')
        batch_op.drop_index('idx_service_logs_service_type')
        batch_op.drop_index('idx_service_logs_queue_entry')
        batch_op.drop_index('idx_service_logs_agent')

    op.drop_table('service_logs')
    with op.batch_alter_table('error_logs', schema=None) as batch_op:
        batch_op.drop_index('idx_error_logs_timestamp')
        batch_op.drop_index('idx_error_logs_severity')
        batch_op.drop_index('idx_error_logs_resolved')

    op.drop_table('error_logs')
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.drop_index('idx_audit_logs_user_timestamp')
        batch_op.drop_index('idx_audit_logs_resource')
        batch_op.drop_index('idx_audit_logs_action')

    op.drop_table('audit_logs')
    with op.batch_alter_table('system_metrics', schema=None) as batch_op:
        batch_op.drop_index('idx_system_metrics_type_timestamp')
        batch_op.drop_index('idx_system_metrics_station_timestamp')

    op.drop_table('system_metrics')
    # ### end Alembic commands ###
